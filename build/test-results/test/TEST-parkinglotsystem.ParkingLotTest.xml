<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="parkinglotsystem.ParkingLotTest" tests="33" skipped="0" failures="0" errors="0" timestamp="2020-09-16T03:54:07" hostname="HPL5" time="1.538">
  <properties/>
  <testcase name="givenAnEmptyLot_WhenInformedToParkingLotOwner_ShouldReturnFalse" classname="parkinglotsystem.ParkingLotTest" time="1.176"/>
  <testcase name="givenParkingLot_ShouldReturnAllParkingListBefore30Min" classname="parkinglotsystem.ParkingLotTest" time="0.057"/>
  <testcase name="givenParkingLotSystem_WhenVehicleShouldParkInEvenlyDistributedLots_ShouldReturnTrue" classname="parkinglotsystem.ParkingLotTest" time="0.053"/>
  <testcase name="givenParkingLot_WhenEmpty_ShouldReturnEmptySlots" classname="parkinglotsystem.ParkingLotTest" time="0.002"/>
  <testcase name="givenParkingLotSystem_WhenDriverTypeIsNormal_ShouldReturnNearestLotSpace" classname="parkinglotsystem.ParkingLotTest" time="0.002"/>
  <testcase name="givenParkingLotSystem_WhenDriverTypeIsHandicap_ShouldReturnNearestLotSpace" classname="parkinglotsystem.ParkingLotTest" time="0.012"/>
  <testcase name="givenSameVehiclesTwoTimes_WhenParked_ShouldThrowException" classname="parkinglotsystem.ParkingLotTest" time="0.002"/>
  <testcase name="givenParkingLotSystem_WhenUnParkNotAvailableVehicle_ShouldThrowException" classname="parkinglotsystem.ParkingLotTest" time="0.002"/>
  <testcase name="givenParkingLotSystem_WhenVehicleNotParkedOnLot_ShouldReturnFalse" classname="parkinglotsystem.ParkingLotTest" time="0.05"/>
  <testcase name="givenAnEmptyPlot_WhenAirportSecurityInformed_ShouldReturnFalse" classname="parkinglotsystem.ParkingLotTest" time="0.003"/>
  <testcase name="givenParkingLot_WhenParkedVehicleColorIsBlue_ShouldListParkedSlots" classname="parkinglotsystem.ParkingLotTest" time="0.006"/>
  <testcase name="givenParkingLotSystem_WhenParkedVehicleInGivenLot_ShouldReturnTrue" classname="parkinglotsystem.ParkingLotTest" time="0.019"/>
  <testcase name="givenAVehicle_WhenParked_ShouldReturnTrue" classname="parkinglotsystem.ParkingLotTest" time="0.002"/>
  <testcase name="givenParkingLot_WhenParkedVehicle_ShouldReturnLocation" classname="parkinglotsystem.ParkingLotTest" time="0.003"/>
  <testcase name="givenParkingLot_WhenVehicleFound_ShouldVehicleSlot" classname="parkinglotsystem.ParkingLotTest" time="0.014"/>
  <testcase name="givenAVehicle_WhenUnparkedAnotherVehicle_ShouldReturnFalse" classname="parkinglotsystem.ParkingLotTest" time="0.008"/>
  <testcase name="givenParkingLot_WhenVehicleParkedIfTimeIsSet_ShouldReturnTrue" classname="parkinglotsystem.ParkingLotTest" time="0.004"/>
  <testcase name="givenVehicle_WhenSpaceIsAvailable_ShouldInformToAirportSecurity" classname="parkinglotsystem.ParkingLotTest" time="0.003"/>
  <testcase name="givenCapacityIs2ShouldBeAbleToPark2Vehicle" classname="parkinglotsystem.ParkingLotTest" time="0.013"/>
  <testcase name="givenAVehicle_WhenIsNotParked_ShouldReturnTrue" classname="parkinglotsystem.ParkingLotTest" time="0.002"/>
  <testcase name="givenAVehicle_WhenParkingLotIsNotFull_ShouldInformParkingLotOwner" classname="parkinglotsystem.ParkingLotTest" time="0.002"/>
  <testcase name="givenParkingLot_WhenParkedBMWVehicle_ShouldReturnLocation" classname="parkinglotsystem.ParkingLotTest" time="0.004"/>
  <testcase name="givenParkingLot_WhenParkedVehicleColorIsWhite_ShouldReturn1" classname="parkinglotsystem.ParkingLotTest" time="0.018"/>
  <testcase name="givenParkingLot_WhenParkWithProvidedSlot_ShouldReturnTrue" classname="parkinglotsystem.ParkingLotTest" time="0.003"/>
  <testcase name="givenVehicle_WhenParkingLotFull_ShouldInformToAirportSecurity" classname="parkinglotsystem.ParkingLotTest" time="0.002"/>
  <testcase name="givenParkingLot_WhenInitialized_ShouldGiveTheParkingCapacity" classname="parkinglotsystem.ParkingLotTest" time="0.001"/>
  <testcase name="givenParkingSlot_WhenVehiclesAreEquals_ShouldReturnTrue" classname="parkinglotsystem.ParkingLotTest" time="0.001"/>
  <testcase name="givenParkingLot_WhenParkedBlueToyotaCar_ShouldReturnLocationAndAttendantNameAndPlateNumber" classname="parkinglotsystem.ParkingLotTest" time="0.001"/>
  <testcase name="givenParkingLot_WhenLargeVehicleParked_ShouldReturnTrue" classname="parkinglotsystem.ParkingLotTest" time="0.002"/>
  <testcase name="givenAParkingLotSystem_WhenAddedALot_ShouldReturnTrue" classname="parkinglotsystem.ParkingLotTest" time="0.001"/>
  <testcase name="givenAVehicle_WhenParkingLotIsFull_ShouldReturnFalse" classname="parkinglotsystem.ParkingLotTest" time="0.002"/>
  <testcase name="givenVehicle_WhenParkingLotFull_ShouldInformToOwner" classname="parkinglotsystem.ParkingLotTest" time="0.022"/>
  <testcase name="givenParkingLot_WhenInitializedWithWrongCapacity_ShouldReturnNotEquals" classname="parkinglotsystem.ParkingLotTest" time="0.003"/>
  <system-out><![CDATA[[MockitoHint] ParkingLotTest.givenParkingLotSystem_WhenParkedVehicleInGivenLot_ShouldReturnTrue (see javadoc for MockitoHint):
[MockitoHint] 1. Unused -> at parkinglotsystem.ParkingLotTest.givenParkingLotSystem_WhenParkedVehicleInGivenLot_ShouldReturnTrue(ParkingLotTest.java:292)

[ParkingSlot{slot=0, time=2020-09-16T09:24:08.746, vehicle=com.bridgelabz.parkinglot.model.Vehicle@4aa6e926, type=NORMAL, attendantName='XYZ'}, ParkingSlot{slot=1, time=2020-09-16T09:24:08.746, vehicle=com.bridgelabz.parkinglot.model.Vehicle@25eafe64, type=NORMAL, attendantName='XYZ'}, ParkingSlot{slot=2, time=null, vehicle=null, type=null, attendantName='null'}]
]]></system-out>
  <system-err><![CDATA[com.bridgelabz.parkinglot.exception.ParkingLotException: VEHICLE ALREADY PARK
	at com.bridgelabz.parkinglot.service.ParkingLot.parkingVehicle(ParkingLot.java:46)
	at parkinglotsystem.ParkingLotTest.givenCapacityIs2ShouldBeAbleToPark2Vehicle(ParkingLotTest.java:184)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.mockito.internal.junit.JUnitSessionStore$1.evaluateSafely(JUnitSessionStore.java:54)
	at org.mockito.internal.junit.JUnitSessionStore$1.evaluate(JUnitSessionStore.java:42)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38)
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:118)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:182)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:164)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:412)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56)
	at java.lang.Thread.run(Thread.java:748)
]]></system-err>
</testsuite>
